{"version":3,"sources":["app/helpers/history.js","app/configs/api.config.js","app/configs/constants.js","app/helpers/util.js","app/services/auth.service.js","app/services/post.service.js","app/store/actions/auth.actions.js","app/store/actions/post.actions.js","app/main/components/Auth.js","app/main/components/PostAlbum.js","app/main/components/PostCard.js","app/main/components/Poster.js","app/layout/components/Header.js","app/layout/components/Footer.js","app/layout/Layout.js","app/main/pages/home/HomePage.js","app/main/pages/Page404.js","app/main/pages/login/Login.js","app/main/pages/register/Register.js","app/App.js","app/store/reducers/auth.reducer.js","app/store/reducers/message.reducer.js","app/store/reducers/post.reducer.js","app/store/reducers/index.js","app/store/index.js","index.js"],"names":["history","createBrowserHistory","API_URL","authActionTypes","messageActionTypes","postActionTypes","FETCH_POSTS_REQUEST","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","SEND_MESSAGE_REQUEST","SEND_MESSAGE_SUCCESS","SEND_MESSAGE_FAILURE","setToken","token","localStorage","setItem","getToken","getItem","makeheaders","AuthService","username","password","Promise","resolve","reject","axios","post","user","then","response","data","catch","error","removeItem","get","headers","PostService","id","delete","message","content","authActions","register","dispatch","type","payload","success","login","logout","isLoggedIn","postActions","posts","FETCH_FAIL","postData","Auth","children","useDispatch","useStyles","makeStyles","theme","root","width","marginBottom","display","flexDirection","justifyContent","color","paddingLeft","paddingRight","position","marginTop","search","paddingTop","paddingBottom","borderRadius","transition","backgroundColor","fontSize","marginRight","PostAlbum","classes","useSelector","state","useState","searchKey","setSearchKey","filteredPosts","setFilteredPosts","handleChange","useCallback","e","target","value","postMatches","title","toLowerCase","includes","description","useEffect","filter","Container","className","Paper","elevation","TextField","autoFocus","name","InputProps","disableUnderline","input","placeholder","InputLabelProps","shrink","bootstrapFormLabel","onChange","Grid","container","map","_id","Transition","React","forwardRef","props","ref","Slide","direction","media","height","expand","transform","marginLeft","transitions","create","duration","shortest","expandOpen","avatar","red","action","outline","top","right","padding","months","PostCard","author","messages","active","price","isAuthor","location","willDeliver","createdAt","open","setOpen","handleClose","stringDate","useMemo","date","Date","getMonth","getDate","getFullYear","authorization","useHistory","setMessage","onChangeMessage","handleDelete","handleMessage","preventDefault","push","item","sm","Card","CardHeader","Avatar","aria-label","toUpperCase","IconButton","onClick","Tooltip","subheader","CardContent","Typography","variant","component","onSubmit","length","fromUser","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","Poster","form","useRef","checkBtn","setTitle","setDescription","setPrice","setLocation","setWillDeliver","onChangeTitle","onChangeDescription","onChangePrice","onChangeLocation","onChangeWillDeliver","checked","handleSubmit","current","validateAll","context","_errors","isAddProcessing","htmlFor","style","flexGrow","link","textDecoration","userinfo","Header","userLogOut","event","anchorRef","contains","handleListKeyDown","key","prevOpen","AppBar","Toolbar","aria-controls","undefined","aria-haspopup","Popper","anchorEl","role","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","to","footer","textAlign","Footer","Layout","Fragment","minHeight","margin","maxWidth","HomePage","addToast","useToasts","appearance","autoDismiss","timeId","setTimeout","clearTimeout","spacing","md","Page404","pathname","required","Login","setUsername","setPassword","isProcessing","onChangeUsername","onChangePassword","handleLogin","src","alt","validations","disabled","vusername","vpassword","vmatch","components","Register","handleRegister","App","exact","path","Resgister","initialState","console","log","index","findIndex","newPosts","slice","rootReducer","combineReducers","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","autoDismissTimeout","document","getElementById"],"mappings":"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","file":"static/js/main.cbd06b7e.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export const API_URL = \"https://strangers-things.herokuapp.com/api/COHORT-NAME\";","export const authActionTypes = {\r\n    REGISTER_REQUEST : 'REGISTER_REQUEST',\r\n    REGISTER_SUCCESS : 'REGISTER_SUCCESS',\r\n    REGISTER_FAILURE : 'REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST    : 'LOGIN_REQUEST',\r\n    LOGIN_SUCCESS    : 'LOGIN_SUCCESS',\r\n    LOGIN_FAILURE    : 'LOGIN_FAILURE',\r\n    LOGOUT           : 'LOGOUT',\r\n};\r\n\r\nexport const messageActionTypes = {\r\n    SET_MESSAGE      : 'SET_MESSAGE',\r\n    CLEAR_MESSAGE    : 'CLEAR_MESSAGE'\r\n}\r\n\r\nexport const postActionTypes = {\r\n    FETCH_POSTS_REQUEST    : 'FETCH_POSTS_REQUEST',\r\n    FETCH_POSTS_SUCCESS    : 'FETCH_POSTS_SUCCESS',\r\n    FETCH_POSTS_FAILURE    : 'FETCH_POSTS_FAILURE',\r\n\r\n    ADD_POST_REQUEST     : 'ADD_POST_REQUEST',\r\n    ADD_POST_SUCCESS     : 'ADD_POST_SUCCESS',\r\n    ADD_POST_FAILURE     : 'ADD_POST_FAILURE',\r\n\r\n    // delete the post\r\n    DELETE_POST_REQUEST      : 'DELETE_POST_REQUEST',\r\n    DELETE_POST_SUCCESS      : 'DELETE_POST_SUCCESS',\r\n    DELETE_POST_FAILURE      : 'DELETE_POST_FAILURE',\r\n\r\n    SEND_MESSAGE_REQUEST : 'SEND_MESSAGE_REQUEST',\r\n    SEND_MESSAGE_SUCCESS : 'SEND_MESSAGE_SUCCESS',\r\n    SEND_MESSAGE_FAILURE : 'SEND_MESSAGE_FAILURE',\r\n}\r\n\r\n","/**\r\n * \r\n * @param {token} token - which sets the token in localStorage \r\n */\r\nexport const setToken = (token) => {\r\n    localStorage.setItem('access_token', token); \r\n};\r\n\r\n/**\r\n * - which clears the token in localStorage\r\n */\r\nexport const removeToken = () => {\r\n    localStorage.removeItem('access_token'); \r\n}\r\n\r\nexport const getToken = () => {\r\n    return localStorage.getItem('access_token');\r\n};\r\n\r\nexport const makeheaders = () => {\r\n    const token = getToken();\r\n    if (token) {\r\n        return { 'Authorization': 'Bearer ' + token };\r\n    } else {\r\n        return {};\r\n    }\r\n}","import axios from \"axios\";\r\nimport { API_URL } from '../configs'\r\nimport { setToken, removeToken, makeheaders } from '../helpers/util';\r\n\r\nconst register = (username, password) => {\r\n    return  new Promise((resolve, reject) => {\r\n        axios.post(API_URL + \"/users/register\", {\r\n            user: {\r\n                username,\r\n                password\r\n            }\r\n        }).then(response => {\r\n            const { data } = response.data; \r\n            setToken(data.token);\r\n            resolve(data);\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error)\r\n        })\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n    return  new Promise((resolve, reject) => {\r\n        axios.post(API_URL + \"/users/login\", {\r\n            user: {\r\n                username,\r\n                password\r\n            }\r\n        })\r\n        .then((response) => {\r\n            const { data } = response.data;\r\n            setToken(data.token);\r\n            resolve(data);\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error);\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * which lets you know if there's a current user logged in\r\n */\r\nconst isLoggedIn = () => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(API_URL + '/test/me', {\r\n            headers: makeheaders()\r\n        })\r\n        .then(response => {\r\n            const { data } = response.data;\r\n            resolve(data);\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error);\r\n        })\r\n    }) \r\n};\r\n\r\nconst logout = () => {\r\n    removeToken();\r\n};\r\n\r\nexport const AuthService = {\r\n    register,\r\n    login,\r\n    logout,\r\n    isLoggedIn\r\n};","import axios from \"axios\";\r\nimport { API_URL } from '../configs'\r\nimport { makeheaders } from '../helpers/util';\r\n\r\nconst getAllPosts = () => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(API_URL + '/posts', {\r\n            headers: makeheaders()\r\n        })\r\n        .then(response => {\r\n            const { data } = response.data;\r\n            resolve(data);\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error)\r\n        })\r\n    })\r\n}\r\n\r\nconst post = (data) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(API_URL + '/posts', \r\n            { post: data },\r\n            { headers: makeheaders()}\r\n        )\r\n        .then(response => {\r\n            const { data } = response.data;\r\n            resolve(data);\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error)\r\n        })\r\n    })\r\n}\r\n\r\nconst deletePost = (id) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.delete(API_URL + '/posts/' + id, \r\n            { headers: makeheaders()}\r\n        )\r\n        .then(response => {\r\n            const { data } = response.data;\r\n            resolve(data);\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error)\r\n        })\r\n    });\r\n}\r\n\r\nconst sendMessage = (id, message) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(API_URL + '/posts/' + id + '/messages', \r\n            {\r\n                message: {\r\n                    content: message\r\n                }\r\n            },\r\n            { headers: makeheaders()}\r\n        )\r\n        .then(response => {\r\n            const { data } = response.data;\r\n            resolve(data);\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error)\r\n        })\r\n    });\r\n}\r\n\r\nexport const PostService = {\r\n    getAllPosts,\r\n    post,\r\n    deletePost,\r\n    sendMessage\r\n}","import { authActionTypes, messageActionTypes } from '../../configs';\r\nimport { AuthService, PostService } from '../../services';\r\n\r\nconst login = (username, password) => (dispatch) => {\r\n    dispatch({type: authActionTypes.LOGIN_REQUEST});\r\n    return AuthService.login(username, password)\r\n    .then(response => {\r\n        dispatch({\r\n            type: authActionTypes.LOGIN_SUCCESS, \r\n            payload: username\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE, \r\n            payload : {\r\n                message: response.message,\r\n                success: true\r\n            }\r\n        });\r\n    })\r\n    .catch(error => {\r\n        dispatch({\r\n            type: authActionTypes.LOGIN_FAILURE, \r\n            payload: error.message\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE, \r\n            payload : {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nconst register = (username, password) => (dispatch) => {\r\n    dispatch({type: authActionTypes.REGISTER_REQUEST});\r\n    return AuthService.register(username, password)\r\n    .then(response => {\r\n        dispatch({\r\n            type: authActionTypes.REGISTER_SUCCESS, \r\n            payload: username\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE, \r\n            payload : {\r\n                message: response.message,\r\n                success: true\r\n            }\r\n        });\r\n    })\r\n    .catch(error => {\r\n        dispatch({\r\n            type: authActionTypes.REGISTER_FAILURE, \r\n            payload: error.message\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE, \r\n            payload : {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nconst isLoggedIn = () => (dispatch) => {\r\n    dispatch({type: authActionTypes.LOGIN_REQUEST});\r\n    return AuthService.isLoggedIn()\r\n    .then(response => {\r\n        dispatch({\r\n            type: authActionTypes.LOGIN_SUCCESS,\r\n            payload: response.user.username\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE, \r\n            payload : {\r\n                message: response.message,\r\n                success: true\r\n            }\r\n        });\r\n    })\r\n    .catch(error => {\r\n        dispatch(authActions.logout());\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE, \r\n            payload : {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        });\r\n    })\r\n    \r\n}\r\n\r\nconst logout = () => (dispatch) => {\r\n    AuthService.logout();\r\n    dispatch({type: authActionTypes.LOGOUT});\r\n    dispatch({\r\n        type: messageActionTypes.SET_MESSAGE, \r\n        payload : {\r\n            message: 'You logged out!',\r\n            success: true\r\n        }\r\n    });\r\n}\r\n\r\nexport const authActions = {\r\n    register,\r\n    login,\r\n    logout,\r\n    isLoggedIn\r\n}","import { postActionTypes, messageActionTypes } from '../../configs';\r\nimport { PostService } from '../../services';\r\n\r\nconst getAllPosts = () => (dispatch) => {\r\n    dispatch({type: postActionTypes.FETCH_POSTS_REQUEST});\r\n    return PostService.getAllPosts()\r\n    .then(response => {\r\n        dispatch({\r\n            type: postActionTypes.FETCH_POSTS_SUCCESS,\r\n            payload: response.posts\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: \"All posts successfully fetched\",\r\n                success: true\r\n            }\r\n        });\r\n\r\n    })\r\n    .catch(error => {\r\n        dispatch({\r\n            type: postActionTypes.FETCH_FAIL,\r\n            payload: error.message\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nconst post = (postData) => (dispatch) => {\r\n    dispatch({type: postActionTypes.ADD_POST_REQUEST});\r\n    return PostService.post(postData)\r\n    .then(response => {\r\n        dispatch({\r\n            type: postActionTypes.ADD_POST_SUCCESS,\r\n            payload: response.post\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: \"Post successfully added\",\r\n                success: true\r\n            }\r\n        });\r\n    })\r\n    .catch(error => {\r\n        dispatch({\r\n            type: postActionTypes.ADD_POST_FAILURE,\r\n            payload: error.message\r\n        })\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nconst deletePost = (id) => (dispatch) => {\r\n    dispatch({type: postActionTypes.DELETE_POST_REQUEST});\r\n    return PostService.deletePost(id)\r\n    .then(response => {\r\n        dispatch({\r\n            type: postActionTypes.DELETE_POST_SUCCESS,\r\n            payload: id\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: \"Successfully deleted\",\r\n                success: true\r\n            }\r\n        });\r\n    })\r\n    .catch(error => {\r\n        dispatch({\r\n            type: postActionTypes.DELETE_POST_FAILURE,\r\n            payload: error.message\r\n        })\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nconst sendMessage = (id, message) => (dispatch) => {\r\n    dispatch({type: postActionTypes.SEND_MESSAGE_REQUEST});\r\n    return PostService.sendMessage(id, message)\r\n    .then(response => {\r\n        dispatch({\r\n            type: postActionTypes.SEND_MESSAGE_SUCCESS,\r\n            payload: {\r\n                id: id,\r\n                message: response.message\r\n            }\r\n        })\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload: {\r\n                message: 'Successfully message sent',\r\n                success: true\r\n            }\r\n        })\r\n    })\r\n    .catch(error => {\r\n        dispatch({\r\n            type: postActionTypes.SEND_MESSAGE_FAILURE,\r\n        })\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload: {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport const postActions = {\r\n    getAllPosts,\r\n    post,\r\n    deletePost,\r\n    sendMessage\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authActions } from \"../../store/actions\";\r\nimport { getToken } from '../../helpers/util';\r\n\r\nconst Auth = ({children}) => {\r\n    const dispatch = useDispatch();\r\n    if(getToken()) {\r\n        dispatch(authActions.isLoggedIn());\r\n    }\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PostCard } from '../components';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { postActions } from '../../store/actions';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Paper, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '95%',\r\n        marginBottom: '20px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        color: 'Black',\r\n        paddingLeft: \"1em\",\r\n        paddingRight: \"1em\",\r\n        position: 'relative',\r\n        marginTop: '2em'\r\n    },\r\n    search : {\r\n        paddingLeft: '.8rem',\r\n        paddingRight: '.8rem',\r\n        paddingTop: '.6rem',\r\n        paddingBottom: '.6rem',\r\n        '& .input-wrapper' : {\r\n            borderRadius: \"2.4rem\",\r\n            display: 'flex',\r\n            width: '300px',\r\n            color: 'rgba(0, 0, 0, 0.97)',\r\n            transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n            backgroundColor: '#FFFFFF',\r\n            position: 'relative',\r\n            '& .img-btn' : {\r\n                fontSize: '1.4em',\r\n                paddingRight: '',\r\n                marginRight: '0.6em',\r\n                marginTop: '0.3em'\r\n            }\r\n        }\r\n    }\r\n}));\r\n\r\nconst PostAlbum = () => {\r\n    const classes = useStyles();\r\n    const { posts } = useSelector(state => state.posts);\r\n    const [searchKey, setSearchKey] = useState('');\r\n    const [filteredPosts, setFilteredPosts] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const handleChange = useCallback((e) => {\r\n        const searchKey = e.target.value;\r\n        setSearchKey(searchKey);\r\n    }, []);\r\n    \r\n    const postMatches = useCallback((post, searchKey) => {\r\n        return post.title.toLowerCase().includes(searchKey) ||\r\n        post.description.toLowerCase().includes(searchKey)\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        dispatch(postActions.getAllPosts());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setFilteredPosts(posts.filter(post => postMatches(post, searchKey)));\r\n    }, [posts, searchKey])\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <form className={classes.search}>\r\n                <Paper className=\"input-wrapper\" elevation={3}>\r\n                    <TextField \r\n                        autoFocus={false}\r\n                        name=\"search\"\r\n                        className=\"flex-1\"\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                            classes : {\r\n                                root : \"flex flex-grow flex-no-shrink ml-16 mr-28 my-8 text-9\",\r\n                                input: \"\"\r\n                            },\r\n                            placeholder     : \"Search posts...\"\r\n                        }}\r\n                        InputLabelProps={{\r\n                            shrink   : false,\r\n                            className: classes.bootstrapFormLabel\r\n                        }}\r\n                        value={searchKey}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <SearchIcon className=\"img-btn\"/>\r\n                </Paper>\r\n            </form>\r\n            <Grid container>\r\n                {\r\n                    filteredPosts &&\r\n                    filteredPosts.map(post => {\r\n                        return (\r\n                            <PostCard key={post._id} {...post}/>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PostAlbum;","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { postActions } from '../../store/actions';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { Paper, TextField } from \"@material-ui/core\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '95%',\r\n        marginBottom: '20px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        color: 'Black',\r\n        paddingLeft: \"1em\",\r\n        paddingRight: \"1em\",\r\n        position: 'relative',\r\n        marginTop: '2em'\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    expand: {\r\n        transform: \"rotate(0deg)\",\r\n        marginLeft: \"auto\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest\r\n        })\r\n    },\r\n    expandOpen: {\r\n         transform: \"rotate(180deg)\"\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n    action: {\r\n        outline: 'none'\r\n    },\r\n    message : {\r\n        paddingLeft: '.8rem',\r\n        paddingRight: '.8rem',\r\n        paddingTop: '.6rem',\r\n        paddingBottom: '.6rem',\r\n        '& .input-wrapper' : {\r\n            borderRadius: \"2.4rem\",\r\n            display: 'flex',\r\n            color: 'rgba(0, 0, 0, 0.97)',\r\n            transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n            backgroundColor: '#FFFFFF',\r\n            position: 'relative',\r\n            '& .icon-btn' : {\r\n                position: 'absolute',\r\n                top: '0',\r\n                right: '0',\r\n                padding: '8px',\r\n                fontSize: '1.6em',\r\n                '& .img-btn' : {\r\n                    fontSize: '0.8em',\r\n                    paddingRight: ''\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\nconst PostCard = ({\r\n    _id,\r\n    title, \r\n    description,\r\n    author, \r\n    active, \r\n    messages, \r\n    price,\r\n    isAuthor,\r\n    location,\r\n    willDeliver,\r\n    createdAt\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    //dialog control \r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const classes = useStyles();\r\n    const stringDate = useMemo(() => {\r\n        const date = new Date(createdAt);\r\n        const stringDate = months[date.getMonth()] + ' ' + (date.getDate() - 1) + \", \" + date.getFullYear();\r\n        return stringDate;\r\n    }, [])\r\n    const { user } = useSelector(state => state.authorization);\r\n    const history = useHistory();\r\n    const [message, setMessage] = useState(\"\");\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const onChangeMessage = useCallback((e) => {\r\n        const message = e.target.value;\r\n        setMessage(message)\r\n    }, [message]);\r\n\r\n    //post delete handler\r\n    const handleDelete = useCallback((id) => {\r\n        dispatch(postActions.deletePost(id))\r\n    }, []);\r\n\r\n    // message send handler\r\n    const handleMessage = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(user) {\r\n            dispatch(postActions.sendMessage(_id, message));\r\n            setMessage('');\r\n        } else {\r\n            history.push('/signin');\r\n        }\r\n    }, [message])\r\n    return (\r\n        <Grid container item sm={6}>\r\n            <Card className={classes.root}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                            {author.username[0].toUpperCase()}\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        isAuthor &&\r\n                        <IconButton aria-label=\"settings\" onClick={handleClickOpen}>\r\n                            <Tooltip title=\"Delete\">\r\n                                <DeleteIcon />\r\n                            </Tooltip>\r\n                        </IconButton>\r\n                    }\r\n                    title={ title + ': By ' + author.username }\r\n                    subheader={stringDate}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                        <Tooltip title=\"Description\">\r\n                            <DescriptionIcon />    \r\n                        </Tooltip> : {description}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                        <Tooltip title=\"Price\">\r\n                            <MoneyIcon />\r\n                        </Tooltip> : {price}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                        <Tooltip title=\"Location\">\r\n                            <LocationOnIcon />\r\n                        </Tooltip>: {location}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                        <Tooltip title=\"Deliverable\">\r\n                            <FlightTakeoffIcon />\r\n                        </Tooltip> : {willDeliver ? 'Yes' : 'No'}\r\n                    </Typography>\r\n                    {\r\n                        !isAuthor && (\r\n                            <div className=\"mt-20\">\r\n                                <form onSubmit={handleMessage} className={classes.message}>\r\n                                    <Paper className=\"input-wrapper\" elevation={3}>\r\n                                        <TextField \r\n                                            autoFocus={false}\r\n                                            name=\"message\"\r\n                                            className=\"flex-1\"\r\n                                            InputProps={{\r\n                                                disableUnderline: true,\r\n                                                classes : {\r\n                                                    root : \"flex flex-grow flex-no-shrink ml-16 mr-28 my-8 text-9\",\r\n                                                    input: \"\"\r\n                                                },\r\n                                                placeholder     : \"Type your message\"\r\n                                            }}\r\n                                            InputLabelProps={{\r\n                                                shrink   : false,\r\n                                                className: classes.bootstrapFormLabel\r\n                                            }}\r\n                                            value={message}\r\n                                            onChange={onChangeMessage}\r\n                                        />\r\n                                        <IconButton type=\"submit\" className=\"icon-btn\">\r\n                                            <Tooltip title=\"Send Message\">\r\n                                                <SendIcon className=\"img-btn\"/>\r\n                                            </Tooltip>\r\n                                        </IconButton>\r\n                                    </Paper>\r\n                                </form>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    {\r\n                        isAuthor && (\r\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"div\">\r\n                                <Tooltip title=\"Messages\">\r\n                                    <MessageIcon />\r\n                                </Tooltip>\r\n                                : {\r\n                                    messages.length ? \r\n                                    messages.map(message => {\r\n                                        return (\r\n                                            <p key={message._id}>\r\n                                                {message.fromUser.username} <RecordVoiceOverIcon /> {message.content}\r\n                                            </p>\r\n                                        )\r\n                                    }) : 'No message'\r\n                                }\r\n                            </Typography>\r\n                        )\r\n                    }\r\n                </CardContent>\r\n            </Card>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Delete your post?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        This post will be deactivated if you click Agree.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={() => handleDelete(_id)} color=\"primary\">\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default PostCard;","import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport Textarea from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { postActions } from '../../store/actions';\r\n\r\nconst Poster = () => {\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [willDeliver, setWillDeliver] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.authorization);\r\n    const history = useHistory();\r\n\r\n    const onChangeTitle = useCallback((e) => {\r\n        const title = e.target.value;\r\n        setTitle(title);\r\n    }, [title]);\r\n\r\n    const onChangeDescription = useCallback((e) => {\r\n        const description = e.target.value;\r\n        setDescription(description);\r\n    }, [description]);\r\n    \r\n    const onChangePrice = useCallback((e) => {\r\n        const price = e.target.value;\r\n        setPrice(price);\r\n    }, [price]);\r\n\r\n    const onChangeLocation = useCallback((e) => {\r\n        const location = e.target.value;\r\n        setLocation(location);\r\n    }, [location]);\r\n\r\n    const onChangeWillDeliver = useCallback((e) => {\r\n        const willDeliver = e.target.checked;\r\n        setWillDeliver(willDeliver);\r\n    }, [willDeliver])\r\n\r\n    const handleSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        form.current.validateAll();\r\n        if(user) {   \r\n            if (checkBtn.current.context._errors.length === 0) {\r\n                dispatch(postActions.post({\r\n                    title,\r\n                    description,\r\n                    price,\r\n                    location,\r\n                    willDeliver\r\n                }));\r\n                setLocation('');\r\n                setTitle('');\r\n                setPrice('');\r\n                setWillDeliver(false);\r\n                setDescription('');\r\n            }\r\n        } else {\r\n            history.push('/signin');\r\n        }\r\n    }, [title, description, price, location, willDeliver, user]);\r\n\r\n    const { isAddProcessing } = useSelector(state => state.posts);\r\n\r\n    return (\r\n        <div className=\"poster-wrapper container\">\r\n            <div className=\"poster-content\">\r\n                <div className=\"row text-center ml-auto\">\r\n                    <h5>\r\n                        Create a New Post\r\n                    </h5>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Form onSubmit={handleSubmit} ref={form}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <Input \r\n                                id=\"title\"\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                className=\"form-control\"\r\n                                value={title}\r\n                                onChange={onChangeTitle}\r\n                                placeholder=\"title\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <Textarea \r\n                                id=\"description\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"description\"\r\n                                value={description}\r\n                                onChange={onChangeDescription}\r\n                                placeholder=\"description\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"price\">Price</label>\r\n                            <Input \r\n                                id=\"price\"\r\n                                type=\"text\"\r\n                                name=\"price\"\r\n                                className=\"form-control\"\r\n                                value={price}\r\n                                onChange={onChangePrice}\r\n                                placeholder=\"price\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"location\">Location</label>\r\n                            <Input \r\n                                id=\"location\"\r\n                                type=\"text\"\r\n                                name=\"location\"\r\n                                className=\"form-control\"\r\n                                value={location}\r\n                                onChange={onChangeLocation}\r\n                                placeholder=\"location\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                            <input\r\n                                type=\"checkbox\" \r\n                                id=\"willdeliver\"\r\n                                name=\"willdeliver\"\r\n                                className=\"form-check-input\"\r\n                                checked={willDeliver}\r\n                                onChange={onChangeWillDeliver}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor =\"willdeliver\">WillDeliver</label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn btn-primary btn-block\">\r\n                                {isAddProcessing && (\r\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                )}\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                        <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Poster;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { authActions, postActions } from \"../../store/actions\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    link: {\r\n        color: 'white',\r\n        textDecoration: 'none',\r\n        \"&:hover\" : {\r\n            color: 'white',\r\n            textDecoration: 'none'\r\n        }\r\n    },\r\n    userinfo: {\r\n        fontSize: '15px',\r\n        color: 'white',\r\n    }\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    const {isLoggedIn, user} = useSelector((state) => state.authorization);\r\n    const dispatch = useDispatch();\r\n    const userLogOut = useCallback((event) => {\r\n        dispatch(authActions.logout());\r\n        dispatch(postActions.getAllPosts());\r\n        handleClose(event);\r\n    }, []);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\" color=\"primary\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Strange Things\r\n                    </Typography>\r\n                    {\r\n                        !isLoggedIn ? (\r\n                            <>\r\n                                <Button><Link to={'/signin'} className={classes.link}>SignIn</Link></Button>\r\n                                <Button><Link to={'/signup'} className={classes.link}>SignUp</Link></Button>\r\n                            </>\r\n                        ) : (\r\n                            <div>\r\n                                <Button\r\n                                    ref={anchorRef}\r\n                                    aria-controls={open ? 'menu-list-grow' : undefined}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleToggle}\r\n                                    className={classes.userinfo}\r\n                                >\r\n                                    <AccountCircle/>\r\n                                    {user}\r\n                                </Button>\r\n                                <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                                    {({ TransitionProps, placement }) => (\r\n                                        <Grow\r\n                                            {...TransitionProps}\r\n                                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                                        >\r\n                                        <Paper>\r\n                                            <ClickAwayListener onClickAway={handleClose}>\r\n                                            <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                                                <MenuItem onClick={userLogOut}>Logout</MenuItem>\r\n                                            </MenuList>\r\n                                            </ClickAwayListener>\r\n                                        </Paper>\r\n                                        </Grow>\r\n                                    )}\r\n                                </Popper>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        fontSize: \"12px\",\r\n        textAlign: 'center',\r\n        padding: '1em',\r\n    }\r\n}));\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"primary\">\r\n                <Typography className={classes.footer}>\r\n                    Strange Things @ 2020 - All rights reserved\r\n                </Typography>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Header, Footer } from './components'\r\n\r\nconst Layout = ({ children }) => (\r\n    <React.Fragment>\r\n        <Header />\r\n        {children}\r\n        <Footer />\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Layout;","import React, { useEffect } from 'react';\r\nimport { Poster, PostAlbum } from '../../components'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from '../../../layout/Layout';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { messageActionTypes } from '../../../configs';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minHeight: `calc(100vh - 125px)`,\r\n        margin: '90px 10px 0',\r\n        maxWidth: '100%'\r\n    }\r\n}));\r\n\r\n\r\nconst HomePage = () => {\r\n    const classes = useStyles();\r\n    const { addToast } = useToasts();\r\n    const dispatch = useDispatch();\r\n\r\n    const { message, success } = useSelector(state => state.message);\r\n    useEffect(() => {\r\n        if(!message) {\r\n            return;\r\n        }\r\n        addToast(message, {\r\n            appearance: success ? 'success' : 'error',\r\n            autoDismiss: true\r\n        })\r\n        const timeId = setTimeout(() => dispatch({type: messageActionTypes.CLEAR_MESSAGE}), 5000)\r\n        return () => {\r\n            clearTimeout(timeId);\r\n        }\r\n    }, [message])\r\n    return (\r\n        <Layout>\r\n            <Container className={classes.root}>\r\n                <Grid\r\n                    container\r\n                    spacing={3}\r\n                >\r\n                    <Grid container item md={9} spacing={3}>\r\n                        <PostAlbum />\r\n                    </Grid>\r\n                    <Grid container item md={3} spacing={3} className=\"flex flex-column\">\r\n                        <Poster />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst Page404 = ({ location }) => (\r\n    <div className=\"text-center\">\r\n        <h1>404</h1>\r\n       <h2>No match found for <code>{location.pathname}</code></h2>\r\n    </div>\r\n );\r\n\r\nexport default Page404;","import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { authActions } from \"../../../store/actions\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { messageActionTypes } from '../../../configs';\r\nimport { CircularProgress, Button } from '@material-ui/core';\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n            This field is required!\r\n        </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Login = () => {\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const { isLoggedIn } = useSelector(state => state.authorization);\r\n    const { isProcessing } = useSelector(state => state.authorization);\r\n    const { message } = useSelector(state => state.message);\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeUsername = useCallback((e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    }, [username])\r\n\r\n    const onChangePassword = useCallback((e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    }, [password])\r\n\r\n    const handleLogin = useCallback((e) => {\r\n        e.preventDefault();\r\n        form.current.validateAll();\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            dispatch(authActions.login(username, password))\r\n        };\r\n    }, [username, password])\r\n\r\n    const gotoHomePage = () => {\r\n        return history.push('/');\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const timeId = setTimeout(() => dispatch({type: messageActionTypes.CLEAR_MESSAGE}), 4000)\r\n        return () => {\r\n            clearTimeout(timeId);\r\n        }\r\n    }, [message])\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card card-container\">\r\n                <div className=\"row\">\r\n                    <IconButton aria-label=\"\" onClick={gotoHomePage}>\r\n                        <HomeIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <img\r\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                    alt=\"profile-img\"\r\n                    className=\"profile-img-card\"\r\n                />\r\n                {message && (\r\n                    <div className=\"form-group\">\r\n                    <div className=\"alert alert-danger text-center pl-5 pr-5\" role=\"alert\">\r\n                        {message}\r\n                    </div>\r\n                    </div>\r\n                )}\r\n                <Form onSubmit={handleLogin} ref={form}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <Input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={onChangeUsername}\r\n                        validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <Input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary btn-block\" disabled={isProcessing}>\r\n                            {isProcessing && (\r\n                                <span className=\"spinner-border spinner-border-sm\"></span>\r\n                            )}\r\n                            <span>Sign In</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"form-group text-center\">\r\n                        Don't have an account? <Link to={'/signup'}>Create One</Link>\r\n                    </div>\r\n\r\n                    \r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { authActions } from \"../../../store/actions\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { messageActionTypes } from '../../../configs';\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vusername = (value) => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vmatch = (value, props, components) => {\r\n    if(value !== components['password'][0].value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password doesn't match.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Register = () => {\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const { message } = useSelector(state => state.message);\r\n    const { isLoggedIn } = useSelector(state => state.authorization);\r\n    const { isProcessing } = useSelector(state => state.authorization);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onChangeUsername = useCallback((e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    }, [username]);\r\n\r\n    const onChangePassword = useCallback((e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    }, [password]);\r\n\r\n    const handleRegister = useCallback((e) => {\r\n        e.preventDefault();\r\n\r\n        form.current.validateAll();\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            dispatch(authActions.register(username, password))\r\n        }\r\n    }, [username, password]);\r\n\r\n    \r\n    const gotoHomePage = () => {\r\n        return history.push('/');\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const timeId = setTimeout(() => dispatch({type: messageActionTypes.CLEAR_MESSAGE}), 3000)\r\n        return () => {\r\n            clearTimeout(timeId);\r\n        }\r\n    }, [message])\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card card-container\">\r\n                <div className=\"row\">\r\n                    <IconButton aria-label=\"\" onClick={gotoHomePage}>\r\n                        <HomeIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <img\r\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                    alt=\"profile-img\"\r\n                    className=\"profile-img-card\"\r\n                    />\r\n                {message && (\r\n                    <div className=\"form-group\">\r\n                    <div className={ isProcessing ? \"alert alert-success\" : \"alert alert-danger text-center pl-5 pr-5\" } role=\"alert\">\r\n                        {message}\r\n                    </div>\r\n                    </div>\r\n                )}\r\n\r\n                <Form onSubmit={handleRegister} ref={form}>\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                value={username}\r\n                                onChange={onChangeUsername}\r\n                                validations={[required, vusername]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={onChangePassword}\r\n                                validations={[required, vpassword]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Confirm Password</label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password-confirm\"\r\n                                validations={[required, vmatch]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn btn-primary btn-block\" disabled={isProcessing}>\r\n                                {isProcessing && (\r\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                )}\r\n                                Sign Up\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            Already registered? <Link to={'/signin'}>Signin</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { history } from './helpers/history';\nimport HomePage from './main/pages/home/HomePage';\nimport Page404 from './main/pages/Page404';\nimport Login from './main/pages/login/Login';\nimport Resgister from './main/pages/register/Register';\nimport { ToastProvider } from 'react-toast-notifications';\n\nfunction App() {\n    return (\n        <Router history={history}>\n            <Switch>\n                <Route exact path=\"/\" component={HomePage}/> \n                <Route path=\"/signin\" component={Login}/> \n                <Route path=\"/signup\" component={Resgister}/> \n                <Route component={ Page404} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import { authActionTypes } from '../../configs';\r\n\r\n\r\nconst initialState = { \r\n    isLoggedIn: false, \r\n    user: null, \r\n    isProcessing: false \r\n};\r\n\r\nconst authorization = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case authActionTypes.LOGIN_REQUEST: \r\n        case authActionTypes.REGISTER_REQUEST:\r\n            return {\r\n                ...state,\r\n                isProcessing: true\r\n            }\r\n        case authActionTypes.REGISTER_SUCCESS: \r\n        case authActionTypes.LOGIN_SUCCESS: \r\n            return {\r\n                ...state,\r\n                isProcessing: false,\r\n                isLoggedIn: true,\r\n                user: payload\r\n            }\r\n        case authActionTypes.REGISTER_FAILURE: \r\n        case authActionTypes.LOGIN_FAILURE:\r\n        case authActionTypes.LOGOUT:\r\n            return {\r\n                ...state,\r\n                isProcessing: false,\r\n                isLoggedIn: false,\r\n                user: null\r\n            } \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authorization;","import { messageActionTypes } from \"../../configs\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case messageActionTypes.SET_MESSAGE:\r\n            return { message: payload.message, success: payload.success };\r\n\r\n        case messageActionTypes.CLEAR_MESSAGE:\r\n            return { message: \"\" };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { postActionTypes } from '../../configs';\r\n\r\nconst initialState = {\r\n    isProcessing: false,\r\n    posts: []\r\n};\r\n\r\nconst posts = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case postActionTypes.FETCH_POSTS_REQUEST:\r\n        case postActionTypes.DELETE_POST_REQUEST:\r\n        case postActionTypes.SEND_MESSAGE_REQUEST:{\r\n            console.log('delete post request', state)\r\n            return {\r\n                ...state,\r\n                isProcessing: true\r\n            }\r\n        }\r\n        case postActionTypes.ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                isAddProcessing: true\r\n            }\r\n        case postActionTypes.FETCH_POSTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isProcessing: false,\r\n                posts: payload\r\n            }\r\n        case postActionTypes.ADD_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAddProcessing: false,\r\n                posts: [\r\n                    ...state.posts,\r\n                    payload\r\n                ]\r\n            }\r\n        case postActionTypes.ADD_POST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isAddProcessing: false,\r\n            }\r\n        case postActionTypes.DELETE_POST_SUCCESS:\r\n            const index = state.posts.findIndex(post => post._id === payload);\r\n            const newPosts = [\r\n                ...state.posts.slice(0, index), \r\n                ...state.posts.slice(index + 1)\r\n            ]\r\n            return {\r\n                ...state,\r\n                isProcessing: false,\r\n                posts: newPosts\r\n            }\r\n        case postActionTypes.SEND_MESSAGE_SUCCESS:\r\n            state.posts[state.posts.findIndex(post => post._id === payload.id)].messages.push(payload.message); \r\n            return {\r\n                ...state,\r\n                isProcessing: false,\r\n                posts: state.posts\r\n            }\r\n        case postActionTypes.FETCH_POSTS_FAILURE:\r\n        case postActionTypes.DELETE_POST_FAILURE:\r\n            return {\r\n                ...state,\r\n                isProcessing: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default posts;","import { combineReducers } from 'redux';\r\nimport authorization from './auth.reducer';\r\nimport message from './message.reducer';\r\nimport posts from './post.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    authorization,\r\n    message,\r\n    posts\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './reducers';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './app/App';\nimport { Auth } from './app/main/components';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { ToastProvider } from 'react-toast-notifications';\n\nReactDOM.render(\n    <Provider store={store}>\n        <ToastProvider\n            autoDismiss\n            autoDismissTimeout={6000}\n            placement=\"bottom-center\"\n        >\n            <Auth>\n                <App />\n            </Auth>\n        </ToastProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}